{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danila\\\\Documents\\\\GitHub\\\\forest-haven\\\\frontend\\\\src\\\\page\\\\Auth.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\";\nimport { NavLink, useLocation } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE } from \"../utils/consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const location = useLocation();\n  const isLogin = location.pathname === LOGIN_ROUTE;\n  const signIn = async () => {\n    const response = awi;\n  };\n  console.log(location);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex justify-content-center align-items-center\",\n    style: {\n      height: window.innerHeight - 54\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: 600\n      },\n      className: \"p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"m-auto\",\n        children: isLogin ? \"Авторизация\" : \"Регистрация\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-2\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"mt-2\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-dark\",\n          className: \"mt-2 align-self-start\",\n          children: isLogin ? \"Войти\" : \"Зарегистрироваться\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), isLogin ? /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"mt-2 align-self-end\",\n          to: REGISTRATION_ROUTE,\n          children: \"\\u041D\\u0435\\u0442 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 align-self-end\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            className: \"mt-2\",\n            to: LOGIN_ROUTE,\n            children: \"\\u0415\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","Button","Form","Container","Card","NavLink","useLocation","LOGIN_ROUTE","REGISTRATION_ROUTE","jsxDEV","_jsxDEV","Auth","_s","location","isLogin","pathname","signIn","response","awi","console","log","className","style","height","window","innerHeight","children","width","fileName","_jsxFileName","lineNumber","columnNumber","Control","placeholder","variant","to","_c","$RefreshReg$"],"sources":["C:/Users/Danila/Documents/GitHub/forest-haven/frontend/src/page/Auth.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE } from \"../utils/consts\";\r\n\r\nconst Auth = () => {\r\n  const location = useLocation();\r\n  const isLogin = location.pathname === LOGIN_ROUTE;\r\n\r\n  const signIn = async () => {\r\n    const response = awi\r\n  }\r\n\r\n  console.log(location);\r\n  return (\r\n    <Container\r\n      className=\"d-flex justify-content-center align-items-center\"\r\n      style={{ height: window.innerHeight - 54 }}\r\n    >\r\n      <Card style={{ width: 600 }} className=\"p-5\">\r\n        <h2 className=\"m-auto\">{isLogin ? \"Авторизация\" : \"Регистрация\"}</h2>\r\n        <Form className=\"d-flex flex-column\">\r\n          <Form.Control className=\"mt-2\" placeholder=\"Email\" />\r\n          <Form.Control className=\"mt-2\" placeholder=\"Password\" />\r\n          <Button variant=\"outline-dark\" className=\"mt-2 align-self-start\">\r\n            {isLogin ? \"Войти\" : \"Зарегистрироваться\"}\r\n          </Button>\r\n          {isLogin ? (\r\n            <NavLink className=\"mt-2 align-self-end\" to={REGISTRATION_ROUTE}>\r\n              Нет аккаунта?\r\n            </NavLink>\r\n          ) : (\r\n            <div className=\"mt-2 align-self-end\">\r\n              <NavLink className=\"mt-2\" to={LOGIN_ROUTE}>\r\n                Есть аккаунт?\r\n              </NavLink>\r\n            </div>\r\n          )}\r\n        </Form>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}