{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danila\\\\Documents\\\\GitHub\\\\forest-haven\\\\frontend\\\\src\\\\components\\\\AppRouter.js\";\nimport React from \"react\";\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\nimport { SHOP_ROUTE } from \"../utils/consts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [isAuth && authRoutes.map(({\n      path,\n      Component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      Component: Component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)), publicRoutes.map(({\n      path,\n      Component\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      Component: Component,\n      exact: true\n    }, path, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)), \"if (\", /*#__PURE__*/_jsxDEV(Route, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), \")\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n};\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","authRoutes","publicRoutes","Routes","Route","Navigate","SHOP_ROUTE","jsxDEV","_jsxDEV","AppRouter","isAuth","children","map","path","Component","exact","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Danila/Documents/GitHub/forest-haven/frontend/src/components/AppRouter.js"],"sourcesContent":["import React from \"react\";\r\nimport { authRoutes, publicRoutes } from \"../routes\";\r\nimport { Routes, Route, Navigate } from \"react-router-dom\";\r\nimport { SHOP_ROUTE } from \"../utils/consts\";\r\n\r\n\r\nconst AppRouter = () => {\r\n  const isAuth = false\r\n  return (\r\n  <Routes>\r\n    {isAuth && authRoutes.map(({path, Component}) => \r\n      <Route key={path} path={path} Component={Component} exact/>\r\n    )}\r\n    {publicRoutes.map(({path, Component}) => \r\n      <Route key={path} path={path} Component={Component}  exact/>\r\n    )}\r\n    if (<Route/>)\r\n    \r\n  </Routes>\r\n\r\n  );\r\n  \r\n};\r\n\r\nexport default AppRouter;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,YAAY,QAAQ,WAAW;AACpD,SAASC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAC1D,SAASC,UAAU,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,MAAM,GAAG,KAAK;EACpB,oBACAF,OAAA,CAACL,MAAM;IAAAQ,QAAA,GACJD,MAAM,IAAIT,UAAU,CAACW,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAS,CAAC,kBAC1CN,OAAA,CAACJ,KAAK;MAAYS,IAAI,EAAEA,IAAK;MAACC,SAAS,EAAEA,SAAU;MAACC,KAAK;IAAA,GAA7CF,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0C,CAC5D,CAAC,EACAjB,YAAY,CAACU,GAAG,CAAC,CAAC;MAACC,IAAI;MAAEC;IAAS,CAAC,kBAClCN,OAAA,CAACJ,KAAK;MAAYS,IAAI,EAAEA,IAAK;MAACC,SAAS,EAAEA,SAAU;MAAEC,KAAK;IAAA,GAA9CF,IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CAC7D,CAAC,EAAC,MACE,eAAAX,OAAA,CAACJ,KAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,KAEd;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAIX,CAAC;AAACC,EAAA,GAhBIX,SAAS;AAkBf,eAAeA,SAAS;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}