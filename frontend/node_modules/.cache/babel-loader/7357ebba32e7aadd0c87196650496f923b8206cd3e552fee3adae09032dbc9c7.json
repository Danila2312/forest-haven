{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danila\\\\Documents\\\\GitHub\\\\forest-haven\\\\frontend\\\\src\\\\components\\\\TypeBar.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport { Context } from \"..\";\nimport { observer } from \"mobx-react-lite\";\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TypeBar = _s(observer(_c = _s(() => {\n  _s();\n  const {\n    device\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    variant: \"flush\",\n    children: device.types.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      style: {\n        width: 120,\n        cursor: 'pointer',\n        hover\n      },\n      active: type.id === device.selectedType.id,\n      onClick: () => device.setSelectedType(type),\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}, \"7NqvmAVKlrxWo1mWsul1uXNUccI=\")), \"7NqvmAVKlrxWo1mWsul1uXNUccI=\");\n_c2 = TypeBar;\nexport default TypeBar;\nvar _c, _c2;\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"names":["React","useContext","Context","observer","ListGroup","jsxDEV","_jsxDEV","TypeBar","_s","_c","device","variant","children","types","map","type","Item","style","width","cursor","hover","active","id","selectedType","onClick","setSelectedType","name","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Danila/Documents/GitHub/forest-haven/frontend/src/components/TypeBar.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Context } from \"..\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\n\r\n\r\nconst TypeBar = observer(() => {\r\n  const {device} = useContext(Context)\r\n  return (\r\n    <ListGroup variant=\"flush\">\r\n      {device.types.map(type =>\r\n        <ListGroup.Item\r\n          style={{width:120,\r\n            cursor:'pointer', hover\r\n          }}\r\n          key={type.id}\r\n          active={type.id === device.selectedType.id}\r\n          onClick={() => device.setSelectedType(type)}\r\n\r\n          >\r\n          {type.name}\r\n        </ListGroup.Item>\r\n      )}\r\n    </ListGroup>\r\n  )\r\n})\r\n\r\nexport default TypeBar;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,OAAO,QAAQ,IAAI;AAC5B,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlD,MAAMC,OAAO,GAAAC,EAAA,CAAGL,QAAQ,CAAAM,EAAA,GAAAD,EAAA,CAAC,MAAM;EAAAA,EAAA;EAC7B,MAAM;IAACE;EAAM,CAAC,GAAGT,UAAU,CAACC,OAAO,CAAC;EACpC,oBACEI,OAAA,CAACF,SAAS;IAACO,OAAO,EAAC,OAAO;IAAAC,QAAA,EACvBF,MAAM,CAACG,KAAK,CAACC,GAAG,CAACC,IAAI,iBACpBT,OAAA,CAACF,SAAS,CAACY,IAAI;MACbC,KAAK,EAAE;QAACC,KAAK,EAAC,GAAG;QACfC,MAAM,EAAC,SAAS;QAAEC;MACpB,CAAE;MAEFC,MAAM,EAAEN,IAAI,CAACO,EAAE,KAAKZ,MAAM,CAACa,YAAY,CAACD,EAAG;MAC3CE,OAAO,EAAEA,CAAA,KAAMd,MAAM,CAACe,eAAe,CAACV,IAAI,CAAE;MAAAH,QAAA,EAG3CG,IAAI,CAACW;IAAI,GALLX,IAAI,CAACO,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAME,CAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEhB,CAAC,kCAAC;AAAAC,GAAA,GAnBIxB,OAAO;AAqBb,eAAeA,OAAO;AAAC,IAAAE,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}